import random, names
from Contestant import Contestant, ContestantSet
n = 16

class GamePlay: 
    def __init__(self, initial_guess = None): 
        self._initial_guess = initial_guess
        self._guess_pairs = self.fix_pairs() #guess of pairs by user
        self._l_people = ContestantSet()
        self._pairs = [] #actual pairs generated by game
    
    def create_people(self): 
        for i in range(n): 
            name = names.get_first_name()
            self._l_people.add(i, name)
    
    def create_pairs(self): 
        self._l_people.create_pairs()
        self._pairs = self._l_people._pairs
    
    def display_people(self): 
        self.create_people()
        self.create_pairs()
        return self._l_people

    def initial_check(self, user_guess): 
        self._initial_guess = user_guess
        self._guess_pairs = self.fix_pairs()
        return self._guess_pairs
       
    def fix_pairs(self):
        #to initialize guess pairs to None when this begins, will import 
        #guess list later on
        if self._initial_guess is None: 
            self._guess_pairs = None
            return
        #convert user's list of pairs into list of individual names
        #remove empty space or strings between actual names 
        individuals = []
        for pair in self._initial_guess: 
            names = pair.split(' ')
            for name in names: 
                if name == '': 
                    pass
                else: 
                    individuals.append(name)
        #use list of individuals to create pairs
        guess_pairs = []
        for i in range(0, len(individuals), 2): 
            person_1 = individuals[i]
            person_2 = individuals[i+1]
            pair = (person_1, person_2)

            guess_pairs.append(pair)
        return guess_pairs
                   
            
if __name__ == '__main__': 
    pass